/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package br.Teofilo.Conta;

import br.Teofilo.Bean.Cliente;
import br.Teofilo.Bean.Parcela;
import br.Teofilo.Bean.ValorCliente;
import br.Teofilo.DAO.ClienteDAO;
import br.Teofilo.DAO.ValorClienteDAO;
import funcoes.Conv;
import java.awt.Point;
import java.awt.event.KeyEvent;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author User
 */
public class ContasClienteJF extends javax.swing.JFrame {

    private static Point point = new Point();
    Cliente cliente = null;
    DefaultTableModel tb;

    /**
     * Creates new form ContasClienteJF
     */
    public ContasClienteJF() {
        initComponents();
        tb = (DefaultTableModel) jTable1.getModel();
        jTable1.setRowSorter(new TableRowSorter<>(tb));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabel13 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        ID_CLIENTEtxt = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        Clientelbl = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton2 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        valorManualtxt = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        totalEmAbertotxt = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setUndecorated(true);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jPanel3.setBackground(new java.awt.Color(0, 0, 0));
        jPanel3.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                jPanel3MouseDragged(evt);
            }
        });
        jPanel3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jPanel3MousePressed(evt);
            }
        });

        jLabel13.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel13.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/Teofilo/IMG/logo-2-teofilo-rocha-advocacia-balneario-camboriu-sc-advogado.png"))); // NOI18N

        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/Teofilo/IMG/1x/ic_cancel_18px.png"))); // NOI18N
        jButton3.setBorder(null);
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 782, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton3)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton3)
                    .addComponent(jLabel13))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        ID_CLIENTEtxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                ID_CLIENTEtxtKeyPressed(evt);
            }
        });

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/Teofilo/IMG/1x/zoom-2.png"))); // NOI18N
        jButton1.setBorder(null);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        Clientelbl.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "id", "Data Compra", "Data Vencimento", "Nº Parcela", "Total da Fatura", "Data Pago", "Valor Pago"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.util.Date.class, java.util.Date.class, java.lang.Integer.class, java.lang.Double.class, java.util.Date.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.setColumnSelectionAllowed(true);
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);
        jTable1.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(0).setMinWidth(0);
            jTable1.getColumnModel().getColumn(0).setMaxWidth(0);
        }

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/Teofilo/IMG/1x/ic_control_point_24px.png"))); // NOI18N
        jButton2.setBorder(null);
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/Teofilo/IMG/1x/ic_check_24px.png"))); // NOI18N
        jButton4.setBorder(null);
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jLabel1.setText("Total em Aberto");

        jLabel2.setText("Referente à");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 833, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jButton2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(valorManualtxt, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton4)))
                        .addContainerGap(20, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(ID_CLIENTEtxt, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1)
                        .addGap(18, 18, 18)
                        .addComponent(Clientelbl, javax.swing.GroupLayout.PREFERRED_SIZE, 282, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(totalEmAbertotxt, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(69, 69, 69))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE, false)
                        .addComponent(ID_CLIENTEtxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(Clientelbl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(totalEmAbertotxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jButton2)
                        .addComponent(jButton4))
                    .addComponent(valorManualtxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 325, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addContainerGap(24, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        dispose();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jPanel3MouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel3MouseDragged
        Point p = this.getLocation();
        this.setLocation(p.x + evt.getX() - point.x, p.y + evt.getY() - point.y);
    }//GEN-LAST:event_jPanel3MouseDragged

    private void jPanel3MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel3MousePressed
        point.x = evt.getX();
        point.y = evt.getY();
    }//GEN-LAST:event_jPanel3MousePressed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        buscarCliente();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        novaConta();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        if (jTable1.getSelectedRow() >= 0) {
            baixarSelecionado();
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        if (jTable1.getSelectedRow() >= 0) {
            verificaContaSemParcela();
        }
    }//GEN-LAST:event_jTable1MouseClicked

    private void ID_CLIENTEtxtKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ID_CLIENTEtxtKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            try {
                cliente = new ClienteDAO().getClinte(Integer.parseInt(ID_CLIENTEtxt.getText()));
                ID_CLIENTEtxt.setText(Integer.toString(cliente.getId()));
                Clientelbl.setText(cliente.getNome());
                carregarContasDoCliente();
            } catch (NumberFormatException e) {
                cliente = null;
                JOptionPane.showMessageDialog(null, "Cliente inexistente.");
            }
        }
    }//GEN-LAST:event_ID_CLIENTEtxtKeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ContasClienteJF.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ContasClienteJF.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ContasClienteJF.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ContasClienteJF.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ContasClienteJF().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Clientelbl;
    private javax.swing.JTextField ID_CLIENTEtxt;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField totalEmAbertotxt;
    private javax.swing.JTextField valorManualtxt;
    // End of variables declaration//GEN-END:variables

    private void buscarCliente() {
        SeletorDeClienteJD jd = new SeletorDeClienteJD(null, true);
        jd.setVisible(true);
        if (jd.getCliente() != null) {
            cliente = jd.getCliente();
            ID_CLIENTEtxt.setText(Integer.toString(cliente.getId()));
            Clientelbl.setText(cliente.getNome());
            carregarContasDoCliente();
        }
    }

    private void novaConta() {
        if (cliente != null) {
            NovaContaJD jd = new NovaContaJD(null, true, cliente);
            jd.setVisible(true);
            carregarContasDoCliente();
        }
    }

    private void carregarContasDoCliente() {
        tb.setRowCount(0);
        List<ValorCliente> valores = new ValorClienteDAO().getValoresDoCLiente(cliente);
        double aberto= 0;
        for (ValorCliente v : valores) {
            if (v.getN_parcelas() > 1) {    //se a conta possuir parcelas
                carregarParcelasNaTabela(v);
            }else {                         // é uma conta sem parcela
                carregarValorClienteNaTabela(v);
            }
        }
        for (int x=0;x<jTable1.getRowCount();x++){
            if (jTable1.getValueAt(x, 5) == null){ //conta em aberto sem data de pagamento
                if (jTable1.getValueAt(x, 3)!=null){ //é uma parcela
                    aberto+= (double) jTable1.getValueAt(x, 4);
                }else{ //é uma conta sem parcela
                    aberto+= (double)jTable1.getValueAt(x, 4) - (double)jTable1.getValueAt(x, 6);
                }
            }
        }
        totalEmAbertotxt.setText(Conv.validarValue(aberto));

    }

    private void baixarSelecionado() {
        int index = jTable1.getSelectedRow();
        int id = (int) jTable1.getValueAt(index, 0);
        if (jTable1.getValueAt(index, 3) == null) { //é valorCliente
            try {
                double valor = Double.parseDouble(valorManualtxt.getText().replaceAll(",", "\\."));
                if (!new ValorClienteDAO().baixarValorCliente(id, valor)) {
                    JOptionPane.showMessageDialog(null, "Algo deu errado e não foi possivel baixar valor no banco de dados..", "Erro", JOptionPane.ERROR_MESSAGE);
                } else {
                    new ValorClienteDAO().verificarTotalPagoComValorTotal(id);
                    valorManualtxt.setText("");
                    atualizar();
                }
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(null, "Informe um valor válido para realizar o pagamento da conta.", "Valor inválido", JOptionPane.INFORMATION_MESSAGE);
            }
        } else {  //é parcela
            if (!new ValorClienteDAO().baixarParcelaValorCliente(id)) {
                JOptionPane.showMessageDialog(null, "Algo deu errado e não foi possivel baixar valor no banco de dados..", "Erro", JOptionPane.ERROR_MESSAGE);
            } else {
                atualizar();
            }
        }
    }

    private void verificaContaSemParcela() {
        int index = jTable1.getSelectedRow();
        //se o campo relacionado a parcelas estiver null significa que é uma conta sem parcela
        if (jTable1.getValueAt(index, 3) == null) {
            valorManualtxt.setText(Double.toString((double) jTable1.getValueAt(index, 4) - (double) jTable1.getValueAt(index, 6)));
        } else {
            valorManualtxt.setText("");
        }
    }

    private void atualizar() {
        carregarContasDoCliente();
    }

    private void carregarParcelasNaTabela(ValorCliente v) {
        //obtem as parcelas
        v.setParcelas(new ValorClienteDAO().getParcelasDoValorCliente(v));
        for (Parcela p : v.getParcelas()) {
            //se a parcela ja estiver paga (precisa do if para fazer os parse nas datas, se não da erro)
            if (p.getData_pago() != null) {
                try {
                    Object[] dado = {p.getId(),
                        new SimpleDateFormat("dd/MM/yyyy").parse(v.getEmissao()),
                        new SimpleDateFormat("dd/MM/yyyy").parse(p.getData_vencimento()),
                        p.getN_parcela(),
                        Conv.CDblDuasCasas(p.getValor()),
                        new SimpleDateFormat("dd/MM/yyyy").parse(p.getData_pago()),
                        p.getValor()};
                    tb.addRow(dado);
                } catch (ParseException ex) {
                    Logger.getLogger(ContasClienteJF.class.getName()).log(Level.SEVERE, null, ex);
                    JOptionPane.showMessageDialog(null, "Um objeto não pode ser exibido na lista devido a um erro.\n" + ex, "Erro", JOptionPane.ERROR_MESSAGE);
                }
            } //a parcela nao esta paga
            else {
                try {
                    Object[] dado = {p.getId(),
                        new SimpleDateFormat("dd/MM/yyyy").parse(v.getEmissao()),
                        new SimpleDateFormat("dd/MM/yyyy").parse(p.getData_vencimento()),
                        p.getN_parcela(),
                        Conv.CDblDuasCasas(p.getValor()),
                        null,
                        null};
                    tb.addRow(dado);
                } catch (ParseException ex) {
                    Logger.getLogger(ContasClienteJF.class.getName()).log(Level.SEVERE, null, ex);
                    JOptionPane.showMessageDialog(null, "Um objeto não pode ser exibido na lista devido a um erro.\n" + ex, "Erro", JOptionPane.ERROR_MESSAGE);
                }
            }
        }
    }

    private void carregarValorClienteNaTabela(ValorCliente v) {
        //se a conta ja estiver paga
        if (v.getData_pago() != null) {
            try {
                Object[] dado = {v.getId(),
                    new SimpleDateFormat("dd/MM/yyyy").parse(v.getEmissao()),
                    new SimpleDateFormat("dd/MM/yyyy").parse(v.getData_vencimento()),
                    null,
                    Conv.CDblDuasCasas(v.getTotal()),
                    new SimpleDateFormat("dd/MM/yyyy").parse(v.getData_pago()),
                    v.getJapago()};
                tb.addRow(dado);
            } catch (ParseException ex) {
                Logger.getLogger(ContasClienteJF.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(null, "Um objeto não pode ser exibido na lista devido a um erro.\n" + ex, "Erro", JOptionPane.ERROR_MESSAGE);
            }
        } // a conta não esta paga
        else {
            try {
                Object[] dado = {v.getId(),
                    new SimpleDateFormat("dd/MM/yyyy").parse(v.getEmissao()),
                    new SimpleDateFormat("dd/MM/yyyy").parse(v.getData_vencimento()),
                    null,
                    Conv.CDblDuasCasas(v.getTotal()),
                    null,
                    v.getJapago()};
                tb.addRow(dado);
            } catch (ParseException ex) {
                Logger.getLogger(ContasClienteJF.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(null, "Um objeto não pode ser exibido na lista devido a um erro.\n" + ex, "Erro", JOptionPane.ERROR_MESSAGE);
            }
        }
    }
}
