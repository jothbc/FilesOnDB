/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package br.Teofilo.Documentos;

import br.Teofilo.Bean.Arquivo;
import br.Teofilo.Bean.Cliente;
import br.Teofilo.Bean.Documento;
import br.Teofilo.Bean.GerarLogErro;
import br.Teofilo.Bean.Processo;
import br.Teofilo.Bean.TipoDoc;
import br.Teofilo.DAO.DocumentoDAO;
import funcoes.AES;
import funcoes.Conv;
import funcoes.RSA;
import java.awt.Desktop;
import java.awt.Point;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.security.PublicKey;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.crypto.SecretKey;
import javax.swing.DefaultListModel;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

/**
 *
 * @author User
 */
public class UploadJD extends javax.swing.JDialog {

    //private static final String PATCH = "C:\\JCR\\";
    private static final String PATH = "res/";

    private static Point point = new Point();
    private DefaultListModel lista_arquivos;
    private Cliente cliente;
    private Processo processo;
    private TipoDoc sub_pasta;
    private double tamanho_doc = 0;
    private PublicKey RSA_KEY;
    private String desc_tipo;

    /**
     * Creates new form UploadJD
     *
     * @param parent
     * @param modal
     * @param cliente_
     * @param sub_pasta_
     * @param desc_tipo_arquivo_
     * @param processo_
     */
    public UploadJD(java.awt.Frame parent, boolean modal, Cliente cliente_, TipoDoc sub_pasta_, String desc_tipo_arquivo_, Processo processo_, PublicKey key_p) {
        super(parent, modal);
        this.lista_arquivos = new DefaultListModel<>();
        initComponents();
        this.cliente = cliente_;
        this.sub_pasta = sub_pasta_;
        this.processo = processo_;
        this.desc_tipo = desc_tipo_arquivo_;
        RSA_KEY = key_p;
        init();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        bg = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel13 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        caminhotxt = new javax.swing.JTextField();
        jCheckBox1 = new javax.swing.JCheckBox();
        jCheckBox2 = new javax.swing.JCheckBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList<>();
        clientetxt = new javax.swing.JLabel();
        obs = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jProgressBar1 = new javax.swing.JProgressBar();
        tamtxt = new javax.swing.JLabel();
        jCherCrip = new javax.swing.JCheckBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setUndecorated(true);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jPanel2.setBackground(new java.awt.Color(0, 0, 0));
        jPanel2.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                jPanel2MouseDragged(evt);
            }
        });
        jPanel2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jPanel2MousePressed(evt);
            }
        });

        jLabel13.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel13.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/Teofilo/IMG/logo-2-teofilo-rocha-advocacia-balneario-camboriu-sc-advogado.png"))); // NOI18N

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/Teofilo/IMG/1x/ic_cancel_18px.png"))); // NOI18N
        jButton2.setBorder(null);
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(81, 81, 81)
                .addComponent(jLabel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(27, 27, 27)
                .addComponent(jButton2)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton2)
                    .addComponent(jLabel13))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        caminhotxt.setEditable(false);
        caminhotxt.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        caminhotxt.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));

        jCheckBox1.setBackground(new java.awt.Color(255, 255, 255));
        jCheckBox1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jCheckBox1.setSelected(true);
        jCheckBox1.setText("Arquivo");

        jCheckBox2.setBackground(new java.awt.Color(255, 255, 255));
        jCheckBox2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jCheckBox2.setText("Diret√≥rio");

        jList1.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jList1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jList1MouseClicked(evt);
            }
        });
        jList1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jList1KeyPressed(evt);
            }
        });
        jScrollPane1.setViewportView(jList1);

        clientetxt.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        clientetxt.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        clientetxt.setText("Cliente");

        obs.setText("obs");

        jButton1.setBackground(new java.awt.Color(255, 255, 255));
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/Teofilo/IMG/1x/square-upload.png"))); // NOI18N
        jButton1.setToolTipText("");
        jButton1.setBorder(null);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/Teofilo/IMG/1x/zoom-2.png"))); // NOI18N
        jButton3.setBorder(null);
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        tamtxt.setText("Tamanho Total");

        jCherCrip.setBackground(new java.awt.Color(255, 255, 255));
        jCherCrip.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jCherCrip.setSelected(true);
        jCherCrip.setText("Criptografar");
        jCherCrip.setEnabled(false);
        jCherCrip.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCherCripActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(obs, javax.swing.GroupLayout.PREFERRED_SIZE, 447, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tamtxt, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 74, Short.MAX_VALUE)
                        .addComponent(jButton1))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jCheckBox1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jCheckBox2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jCherCrip, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(clientetxt, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addComponent(jButton3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(caminhotxt))
                    .addComponent(jProgressBar1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(clientetxt)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(caminhotxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jButton3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jCheckBox1)
                    .addComponent(jCheckBox2)
                    .addComponent(jCherCrip))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 238, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(obs)
                    .addComponent(jButton1)
                    .addComponent(tamtxt))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jProgressBar1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jPanel2MouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel2MouseDragged
        Point p = this.getLocation();
        this.setLocation(p.x + evt.getX() - point.x, p.y + evt.getY() - point.y);
    }//GEN-LAST:event_jPanel2MouseDragged

    private void jPanel2MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel2MousePressed
        point.x = evt.getX();
        point.y = evt.getY();
    }//GEN-LAST:event_jPanel2MousePressed

    private void jList1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jList1KeyPressed
        removerItem();
    }//GEN-LAST:event_jList1KeyPressed

    private void jList1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jList1MouseClicked
        if (evt.getClickCount() == 2) {
            visualizar();
        }
    }//GEN-LAST:event_jList1MouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        upload();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        dispose();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        buscar();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jCherCripActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCherCripActionPerformed
        if (jCherCrip.isSelected()) {
            selecionarPK();
        } else {
            RSA_KEY = null;
        }
    }//GEN-LAST:event_jCherCripActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UploadJD.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UploadJD.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UploadJD.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UploadJD.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                UploadJD dialog = new UploadJD(new javax.swing.JFrame(), true, null, null, null, null, KeyController.getPublicKey());
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup bg;
    private javax.swing.JTextField caminhotxt;
    private javax.swing.JLabel clientetxt;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JCheckBox jCheckBox2;
    private javax.swing.JCheckBox jCherCrip;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JList<String> jList1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JProgressBar jProgressBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel obs;
    private javax.swing.JLabel tamtxt;
    // End of variables declaration//GEN-END:variables

    private void init() {
        jList1.setModel(lista_arquivos);
        bg.add(jCheckBox1);
        bg.add(jCheckBox2);
        if (cliente != null) {
            clientetxt.setText(cliente.getNome());
            if (desc_tipo.equals("Documentos")) {
                obs.setText("N¬∫ Processo: " + processo.getN_processo() + " --> " + sub_pasta.getNome());
            } else {
                obs.setText("Documento pessoal.");
            }
            jProgressBar1.setVisible(false);
            if (RSA_KEY == null) {
                RSA_KEY = KeyController.getPublicKey();
                if (RSA_KEY == null) {
                    JOptionPane.showMessageDialog(null, "Por favor, selecione a chave publica para criptografar os dados.\nA falta da chave publica deixa os dados desprotegidos no Banco de Dados.");
                    dispose();
                }
            }
        } else {
            JOptionPane.showMessageDialog(null, "Sem cliente Selecionado. Como voc√™ veio parar aqui?");
        }
    }

    private void buscar() {
        JFileChooser fl = new JFileChooser();
        fl.setDialogTitle("Buscar arquivo");
        if (jCheckBox2.isSelected()) {
            fl.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        } else {
            fl.setFileSelectionMode(JFileChooser.FILES_ONLY);
        }
        int op = fl.showOpenDialog(null);
        if (op == JFileChooser.APPROVE_OPTION) {
            if (fl.getSelectedFile().isDirectory()) { //verifica se √© diret√≥rio
                File diretorio = fl.getSelectedFile();  //somente diret√≥rio sem \\ no fim
                caminhotxt.setText(diretorio.getPath() + "\\");
                String[] arq_string = fl.getSelectedFile().list(); //cont√©m o caminho completo de todos os arquivos dentro da pasta arquivo
                for (String f : arq_string) {
                    File f_temp = new File(diretorio + "\\" + f);
                    if (f_temp.isFile()) {
                        lista_arquivos.addElement(f_temp);
                        tamanho_doc += f_temp.length();
                    }
                }
            } else { //senao √© arquivo
                caminhotxt.setText(fl.getSelectedFile().getPath());
                File f_temp = fl.getSelectedFile();
                if (f_temp.isFile()) {
                    lista_arquivos.addElement(f_temp);
                    tamanho_doc += f_temp.length();
                }
            }
        }
        setTamtxt();
    }

    private void upload() {
        new Thread(() -> {
            jProgressBar1.setVisible(true);
            jProgressBar1.setMinimum(0);
            jProgressBar1.setMaximum(lista_arquivos.size());
            jProgressBar1.setStringPainted(true);
            int count = 0;
            File pasta = new File(PATH + "JCR LOG\\CRIP\\create.txt");
            if (pasta.getParentFile() != null) {
                pasta.getParentFile().mkdirs();
            }
            while (lista_arquivos.size() > 0) {
                File file = (File) lista_arquivos.getElementAt(lista_arquivos.size() - 1);
                byte[] aes = null;
                if (jCherCrip.isSelected()) {
                    /*
                    1 gera a chave aes
                    2 encripta o arquivo com a chave aes
                    3 encripta a chave aes(em formato HEXA) com rsa
                    4 manda para o db a chave aes encriptada
                     */
                    //1
                    SecretKey aesKey = AES.gerarChave(256);
                    //System.out.println("CHAVE AES UTILIZADA EM FORMATO HEXA: "+AES.bytesToHex(aesKey.getEncoded()));
                    //2
                    file = AES.encrypt(file.getPath(), PATH + "JCR LOG\\CRIP\\" + file.getName(), aesKey);
                    //3 e 4
                    aes = RSA.criptografa(AES.bytesToHex(aesKey.getEncoded()), RSA_KEY);
                }
                if (desc_tipo.equals("Documentos")) {
                    if (!new DocumentoDAO().addDocumento(file, cliente.getId(), sub_pasta.getId(), processo.getId(), jCherCrip.isSelected(), aes)) {
                        JOptionPane.showMessageDialog(null, "Erro ao tentar salvar o arquivo " + file.getName() + " no Banco de dados", "Erro", JOptionPane.ERROR_MESSAGE);
                        return;
                    } else {
                        lista_arquivos.remove(lista_arquivos.getSize() - 1);
                        jProgressBar1.setValue(count);
                        count++;
                    }
                } else if (desc_tipo.equals("Documentos Pessoais")) {
                    if (!new DocumentoDAO().addDocumentoPessoal(file, cliente.getId(), jCherCrip.isSelected(), aes)) {
                        JOptionPane.showMessageDialog(null, "Erro ao tentar salvar o arquivo " + file.getName() + " no Banco de dados", "Erro", JOptionPane.ERROR_MESSAGE);
                        return;
                    } else {
                        lista_arquivos.remove(lista_arquivos.getSize() - 1);
                        jProgressBar1.setValue(count);
                        count++;
                    }
                }
                tamanho_doc -= file.length();
                setTamtxt();
            }
            if (desc_tipo.equals("Documentos")) {
                Processo pros = (Processo) DocumentoJF.listProcessos.getElementAt(DocumentoJF.jListProcessos.getSelectedIndex());
                for (TipoDoc tp : pros.getTipos_doc()) {
                    if (tp.getId() == sub_pasta.getId()) {
                        tp.setDocumentos(new DocumentoDAO().getDocumentos_ByTipo(tp.getId()));
                    }
                }
            }else if(desc_tipo.equals("Documentos Pessoais")){
                
                //para melhorar o desempenho, os documentos upados tem que serem criados
                //e depois salvos aqui
                // e nao passado parte por parte para o update
                //DocumentoJF.listDocumentos.addElement(cliente); <<- n√£o √© essa tabela s√≥ pra consta
            }
            jProgressBar1.setVisible(false);
        }).start();
    }

    private void removerItem() {
        if (jList1.getSelectedIndex() < 0) {
            return;
        }
        File file = (File) lista_arquivos.getElementAt(jList1.getSelectedIndex());
        tamanho_doc -= file.length();
        lista_arquivos.remove(jList1.getSelectedIndex());
        setTamtxt();
    }

    private void visualizar() {
        if (jList1.getSelectedIndex() < 0) {
            return;
        }
        try {
            Desktop.getDesktop().open((File) lista_arquivos.getElementAt(jList1.getSelectedIndex()));
        } catch (IOException ex) {
            Logger.getLogger(UploadJD.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void setTamtxt() {
        tamtxt.setText("Tamanho total " + Conv.CDblDuasCasas(((tamanho_doc / 1024) / 1024)) + "MB");
    }

    private void selecionarPK() {
        JFileChooser fl = new JFileChooser();
        fl.setDialogTitle("Selecione a chave publica.");
        fl.setFileSelectionMode(JFileChooser.FILES_ONLY);
        int op = fl.showOpenDialog(null);
        if (op == JFileChooser.APPROVE_OPTION) {
            try {
                //carrega a chave publica para vari√°vel pk
                ObjectInputStream inputStream = null;
                inputStream = new ObjectInputStream(new FileInputStream(fl.getSelectedFile()));
                RSA_KEY = (PublicKey) inputStream.readObject();
            } catch (FileNotFoundException ex) {
                Logger.getLogger(UploadJD.class.getName()).log(Level.SEVERE, null, ex);
                GerarLogErro.gerar(ex.getMessage());
                JOptionPane.showMessageDialog(null, "Algo deu errado, chave n√£o carregada.");
                RSA_KEY = null;
                jCherCrip.setSelected(false);
            } catch (IOException | ClassNotFoundException ex) {
                Logger.getLogger(UploadJD.class.getName()).log(Level.SEVERE, null, ex);
                GerarLogErro.gerar(ex.getMessage());
                JOptionPane.showMessageDialog(null, "Algo deu errado, chave n√£o carregada.");
                RSA_KEY = null;
                jCherCrip.setSelected(false);
            }
        }
    }
}
