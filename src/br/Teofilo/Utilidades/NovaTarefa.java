/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package br.Teofilo.Utilidades;

import br.Teofilo.Bean.Cliente;
import br.Teofilo.Bean.Processo;
import br.Teofilo.Bean.Tarefa;
import br.Teofilo.Cliente.SeletorDeClienteJD;
import br.Teofilo.DAO.ClienteDAO;
import br.Teofilo.DAO.ProcessoDAO;
import br.Teofilo.DAO.TarefaDAO;
import funcoes.CDate;
import java.awt.Point;
import javax.swing.JOptionPane;

/**
 *
 * @author User
 */
public class NovaTarefa extends javax.swing.JDialog {

    public final static int NOVO = 1;
    public final static int EXISTENTE = 2;
    private final Point point = new Point();
    private boolean existente_carregado_sucesso;
    private Tarefa temp;
    private Cliente cliente;
    private Processo processo;

    /**
     * Creates new form NovaTarefa
     *
     * @param parent
     * @param modal
     * @param novoExistente constante que defini se é uma nova inserção ou terá
     * que buscar um existente no banco de dados
     * @param cod é o id da tarefa, só sera usado caso o novoExistente for
     * verdadeiro.
     */
    public NovaTarefa(java.awt.Frame parent, boolean modal, int novoExistente, String cod) {
        super(parent, modal);
        initComponents();
        nadaRadio.setSelected(true);
        bg.add(nadaRadio);
        bg.add(clienteRadio);
        bg.add(processoRadio);
        iniciotxt.setText(CDate.DataPTBRAtual());
        fimtxt.setText(CDate.DataPTBRAtual());
        existente_carregado_sucesso = false;
        nadaRadioActionPerformed(null);
        if (novoExistente == EXISTENTE) {
            if (cod != null) {
                carregarExistente(cod);
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        bg = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jButton3 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        titulotxt = new javax.swing.JTextField();
        colorBtn = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        anotacaotxt = new javax.swing.JTextArea();
        iniciotxt = new javax.swing.JFormattedTextField();
        fimtxt = new javax.swing.JFormattedTextField();
        jPanel2 = new javax.swing.JPanel();
        processoRadio = new javax.swing.JRadioButton();
        clienteRadio = new javax.swing.JRadioButton();
        nadaRadio = new javax.swing.JRadioButton();
        jLabel5 = new javax.swing.JLabel();
        concluidoBox = new javax.swing.JCheckBox();
        gravarBtn = new javax.swing.JButton();
        vinculadotxt = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setUndecorated(true);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jPanel3.setBackground(new java.awt.Color(0, 0, 0));
        jPanel3.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 51, 153), 1, true));
        jPanel3.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                jPanel3MouseDragged(evt);
            }
        });
        jPanel3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jPanel3MousePressed(evt);
            }
        });

        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/Teofilo/IMG/1x/ic_cancel_18px.png"))); // NOI18N
        jButton3.setBorder(null);
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Tarefa");

        titulotxt.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(titulotxt, javax.swing.GroupLayout.PREFERRED_SIZE, 283, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton3))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jButton3)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(titulotxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addContainerGap())
        );

        colorBtn.setText("Marcador");
        colorBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                colorBtnActionPerformed(evt);
            }
        });

        jLabel1.setText("Inicio");

        jLabel2.setText("Fim");

        jLabel4.setText("Anotações");

        anotacaotxt.setColumns(20);
        anotacaotxt.setRows(5);
        jScrollPane1.setViewportView(anotacaotxt);

        try {
            iniciotxt.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        iniciotxt.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        try {
            fimtxt.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        fimtxt.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        processoRadio.setBackground(new java.awt.Color(255, 255, 255));
        processoRadio.setText("Processo");
        processoRadio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                processoRadioActionPerformed(evt);
            }
        });

        clienteRadio.setBackground(new java.awt.Color(255, 255, 255));
        clienteRadio.setText("Cliente");
        clienteRadio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clienteRadioActionPerformed(evt);
            }
        });

        nadaRadio.setBackground(new java.awt.Color(255, 255, 255));
        nadaRadio.setText("Nada");
        nadaRadio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nadaRadioActionPerformed(evt);
            }
        });

        jLabel5.setText("Vinculado à");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 28, Short.MAX_VALUE)
                .addComponent(nadaRadio)
                .addGap(18, 18, 18)
                .addComponent(clienteRadio)
                .addGap(18, 18, 18)
                .addComponent(processoRadio))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nadaRadio)
                    .addComponent(clienteRadio)
                    .addComponent(processoRadio)
                    .addComponent(jLabel5))
                .addContainerGap(14, Short.MAX_VALUE))
        );

        concluidoBox.setBackground(new java.awt.Color(255, 255, 255));
        concluidoBox.setText("Concluído");

        gravarBtn.setText("Gravar");
        gravarBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gravarBtnActionPerformed(evt);
            }
        });

        vinculadotxt.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        vinculadotxt.setText("Vinculado à ");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(175, 175, 175)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(iniciotxt, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(36, 36, 36)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(fimtxt, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addGap(37, 37, 37)
                        .addComponent(vinculadotxt, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(concluidoBox))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(colorBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(58, 58, 58)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 69, Short.MAX_VALUE)
                        .addComponent(gravarBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(5, 5, 5)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(colorBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(gravarBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(iniciotxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(fimtxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel4)
                        .addComponent(vinculadotxt))
                    .addComponent(concluidoBox))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 192, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        dispose();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jPanel3MouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel3MouseDragged
        Point p = this.getLocation();
        this.setLocation(p.x + evt.getX() - point.x, p.y + evt.getY() - point.y);
    }//GEN-LAST:event_jPanel3MouseDragged

    private void jPanel3MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel3MousePressed
        point.x = evt.getX();
        point.y = evt.getY();
    }//GEN-LAST:event_jPanel3MousePressed

    private void colorBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_colorBtnActionPerformed
        escolherCor();
    }//GEN-LAST:event_colorBtnActionPerformed

    private void gravarBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gravarBtnActionPerformed
        gravar();
    }//GEN-LAST:event_gravarBtnActionPerformed

    private void clienteRadioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clienteRadioActionPerformed
        if (clienteRadio.isSelected()) {
            processo = null;
            SeletorDeClienteJD jd = new SeletorDeClienteJD(null, true);
            jd.setVisible(true);
            if (jd.getCliente() != null) {
                cliente = jd.getCliente();
                vinculadotxt.setVisible(true);
                vinculadotxt.setText("Vinculado à cliente: " + cliente.getNome());
            } else {
                cliente = null;
                vinculadotxt.setVisible(false);
                nadaRadio.setSelected(true);
            }
        }
    }//GEN-LAST:event_clienteRadioActionPerformed

    private void processoRadioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_processoRadioActionPerformed
        if (processoRadio.isSelected()) {
            cliente = null;
            SeletorDeProcessoJD jd = new SeletorDeProcessoJD(null, true);
            jd.setVisible(true);
            if (jd.getProcesso() != null) {
                processo = jd.getProcesso();
                vinculadotxt.setVisible(true);
                vinculadotxt.setText("Vinculado a processo: " + processo.getN_processo());
            } else {
                processo = null;
                vinculadotxt.setVisible(false);
                nadaRadio.setSelected(true);
            }
        }
    }//GEN-LAST:event_processoRadioActionPerformed

    private void nadaRadioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nadaRadioActionPerformed
        vinculadotxt.setText("Sem vínculo.");
        cliente = null;
        processo = null;
    }//GEN-LAST:event_nadaRadioActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NovaTarefa.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NovaTarefa.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NovaTarefa.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NovaTarefa.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                NovaTarefa dialog = new NovaTarefa(new javax.swing.JFrame(), true, NOVO, null);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea anotacaotxt;
    private javax.swing.ButtonGroup bg;
    private javax.swing.JRadioButton clienteRadio;
    private javax.swing.JButton colorBtn;
    private javax.swing.JCheckBox concluidoBox;
    private javax.swing.JFormattedTextField fimtxt;
    private javax.swing.JButton gravarBtn;
    private javax.swing.JFormattedTextField iniciotxt;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JRadioButton nadaRadio;
    private javax.swing.JRadioButton processoRadio;
    private javax.swing.JTextField titulotxt;
    private javax.swing.JLabel vinculadotxt;
    // End of variables declaration//GEN-END:variables

    private void escolherCor() {
        ColorJD jd = new ColorJD(null, true);
        jd.setVisible(true);
        if (jd.getColor() != null) {
            colorBtn.setBackground(jd.getColor());
        }
    }

    private void gravar() {
        if (!existente_carregado_sucesso) {
            gravar_novo();
        } else {
            gravar_existente();
        }
    }

    private void carregarExistente(String cod) {
        int code = extrairCode(cod);
        Tarefa t = new TarefaDAO().getTarefa(code);
        if (t != null) {
            temp = t;
            vinculadotxt.setVisible(true);
            titulotxt.setText(t.getTitulo());
            colorBtn.setBackground(t.getMarcador());
            if (t.isVinculado()) {
                if (t.getClienteNome() != null) {
                    cliente = new ClienteDAO().getCliente(t.getClienteNome());
                    if (cliente == null) {
                        JOptionPane.showMessageDialog(null, "Foi perdido o vinculo com o cliente.\nO cliente pode estar com nome diferente no banco de dados.\nPor favor Localize-o novamente.");
                        clienteRadioActionPerformed(null);
                    } else {
                        vinculadotxt.setText("Vinculado à cliente: " + t.getClienteNome());
                        clienteRadio.setSelected(true);
                    }
                } else {
                    processo = new ProcessoDAO().getProcesso(t.getProcesso());
                    if (processo == null) {
                        JOptionPane.showMessageDialog(null, "Foi perdido o vinculo com o processo.\nO processo pode estar com id diferente no banco de dados.\nPor favor Localize-o novamente.");
                        processoRadioActionPerformed(null);
                    } else {
                        vinculadotxt.setText("Vinculado a processo: " + t.getProcesso());
                        processoRadio.setSelected(true);
                    }
                }
            } else {
                vinculadotxt.setText("Sem vínculo.");
                nadaRadio.setSelected(true);
            }
            iniciotxt.setText(t.getInicio());
            fimtxt.setText(t.getFim());
            concluidoBox.setSelected(t.isConcluido());
            anotacaotxt.setText(t.getAnotacoes());
            existente_carregado_sucesso = true;
        }
    }

    private int extrairCode(String cod) {
        int index = cod.indexOf('@');
        return Integer.parseInt(cod.substring(0, index));
    }

    private void gravar_novo() {
        Tarefa t = new Tarefa();
        t.setTitulo(titulotxt.getText());
        t.setMarcador(colorBtn.getBackground());
        t.setInicio(iniciotxt.getText());
        t.setFim(fimtxt.getText());
        t.setAnotacoes(anotacaotxt.getText());
        t.setVinculado(clienteRadio.isSelected() || processoRadio.isSelected());
        t.setConcluido(concluidoBox.isSelected());
        if (t.isVinculado()) {
            if (clienteRadio.isSelected()) {
                t.setClienteNome(cliente.getNome());
            } else {
                t.setProcesso(processo.getN_processo());
            }
        }
        if (new TarefaDAO().addTarefa(t)) {
            this.dispose();
        } else {
            JOptionPane.showMessageDialog(null, "Erro ao tentar salvar a tarefa no Banco de Dados.", "Erro", JOptionPane.ERROR_MESSAGE);
        }
    }

    private void gravar_existente() {
        Tarefa t = temp;
        t.setTitulo(titulotxt.getText());
        t.setMarcador(colorBtn.getBackground());
        t.setInicio(iniciotxt.getText());
        t.setFim(fimtxt.getText());
        t.setAnotacoes(anotacaotxt.getText());
        t.setVinculado(clienteRadio.isSelected() || processoRadio.isSelected());
        t.setConcluido(concluidoBox.isSelected());
        if (t.isVinculado()) {
            if (clienteRadio.isSelected()) {
                t.setClienteNome(cliente.getNome());
                t.setProcesso(null);
            } else {
                t.setProcesso(processo.getN_processo());
                t.setClienteNome(null);
            }
        }else{
            t.setProcesso(null);
            t.setClienteNome(null);
        }
        if (new TarefaDAO().atualizarTarefa(t)) {
            this.dispose();
        } else {
            JOptionPane.showMessageDialog(null, "Erro ao tentar atualizar a tarefa no Banco de Dados.", "Erro", JOptionPane.ERROR_MESSAGE);
        }
    }

}
